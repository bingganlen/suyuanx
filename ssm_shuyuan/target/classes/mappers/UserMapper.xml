<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.megain.junhao.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.megain.junhao.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="d_id" jdbcType="INTEGER" property="dId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="num_admin_devices" jdbcType="INTEGER" property="numAdminDevices" />
    <result column="num_watch_device" jdbcType="INTEGER" property="numWatchDevice" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="dep_id" jdbcType="INTEGER" property="depId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, password, email, phone, question, answer, status, dept_id, role_id, 
    d_id, create_time, update_time, login_time, last_login_time, num_admin_devices, num_watch_device, 
    gender, dep_id
  </sql>
  <select id="selectByExample" parameterType="com.megain.junhao.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id}
  </select>
  <select id="checkUsername" resultType="int" parameterType="string"><!-- parameterType输入参数 -->
    select count(1) from user
    where username = #{username}
  </select>
  <select id="checkEmail" resultType="int" parameterType="string">
    select count(1) from user
    where email = #{email}
  </select>

  <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username}
    and password = #{password}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.megain.junhao.pojo.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.megain.junhao.pojo.User">
    insert into user (id, username, password, 
      email, phone, question, 
      answer, status, dept_id, 
      role_id, d_id, create_time, 
      update_time, login_time, last_login_time, 
      num_admin_devices, num_watch_device, gender, 
      dep_id)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, 
      #{roleId,jdbcType=INTEGER}, #{dId,jdbcType=INTEGER}, now(),
      now(),now(),now(),
      #{numAdminDevices,jdbcType=INTEGER}, #{numWatchDevice,jdbcType=INTEGER}, #{gender,jdbcType=CHAR}, 
      #{depId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.megain.junhao.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="question != null">
        question,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="dId != null">
        d_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="numAdminDevices != null">
        num_admin_devices,
      </if>
      <if test="numWatchDevice != null">
        num_watch_device,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="depId != null">
        dep_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="dId != null">
        #{dId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="updateTime != null">
        now(),
      </if>
      <if test="loginTime != null">
        now(),
      </if>
      <if test="lastLoginTime != null">
        now(),
      </if>
      <if test="numAdminDevices != null">
        #{numAdminDevices,jdbcType=INTEGER},
      </if>
      <if test="numWatchDevice != null">
        #{numWatchDevice,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="depId != null">
        #{depId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.megain.junhao.pojo.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.question != null">
        question = #{record.question,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.dId != null">
        d_id = #{record.dId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.numAdminDevices != null">
        num_admin_devices = #{record.numAdminDevices,jdbcType=INTEGER},
      </if>
      <if test="record.numWatchDevice != null">
        num_watch_device = #{record.numWatchDevice,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.depId != null">
        dep_id = #{record.depId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      question = #{record.question,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      dept_id = #{record.deptId,jdbcType=INTEGER},
      role_id = #{record.roleId,jdbcType=INTEGER},
      d_id = #{record.dId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      num_admin_devices = #{record.numAdminDevices,jdbcType=INTEGER},
      num_watch_device = #{record.numWatchDevice,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=CHAR},
      dep_id = #{record.depId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.megain.junhao.pojo.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="dId != null">
        d_id = #{dId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = now(),
      </if>
      <if test="loginTime != null">
        login_time = now(),
      </if>
      <if test="lastLoginTime != null">
        last_login_time = now(),
      </if>
      <if test="numAdminDevices != null">
        num_admin_devices = #{numAdminDevices,jdbcType=INTEGER},
      </if>
      <if test="numWatchDevice != null">
        num_watch_device = #{numWatchDevice,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="depId != null">
        dep_id = #{depId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.megain.junhao.pojo.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      dept_id = #{deptId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      d_id = #{dId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      num_admin_devices = #{numAdminDevices,jdbcType=INTEGER},
      num_watch_device = #{numWatchDevice,jdbcType=INTEGER},
      gender = #{gender,jdbcType=CHAR},
      dep_id = #{depId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectQuestionByUsername" resultType="string" parameterType="string">
    select
    question
    from user
    where username = #{username}
  </select>

  <select id="selectUserIdnByUsername" resultType="int" parameterType="string">
    select
    id
    from user
    where username = #{username}
  </select>

  <select id="selectUserByUsername" resultMap="BaseResultMap" parameterType="String">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username}
  </select>

  <select id="checkAnswer" resultType="int" parameterType="map">
    SELECT
    count(1)
    from user
    where username=#{username}
    and question = #{question}
    and answer = #{answer}
  </select>

  <update id="updatePasswordByUsername" parameterType="map">
    update user
    SET password = #{passwordNew},update_time = now()
    where username = #{username}
  </update>

  <select id="checkPassword" resultType="int" parameterType="map">
    SELECT
    count(1)
    from user
    where password = #{password}
    and id = #{userId}
  </select>


  <select id="checkEmailByUserId" resultType="int" parameterType="map">
    select count(1) from user
    where email = #{email}
    and id != #{userId}
  </select>
</mapper>